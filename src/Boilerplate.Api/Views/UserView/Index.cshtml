
<div class="top-bar d-flex justify-content-between align-items-center pt-4 px-2">
    <div class="text-start ps-4">
        <p>Users</p>
        <div>
            <a href="/">Home</a> <span> &rarr; </span>
            <a href="/user">Users</a>
        </div>
    </div>
    <a href="/user/create"  class="btn px-3 rounded-pill btn-defult">
        + Add new
    </a>
</div>
<div class="px-3 my-5 container">
    <div id="gridContainer"></div>
</div>



<script>
    $(document).ready(function() {
    function isNotEmpty(value) {
       return value !== undefined && value !== null && value !== '';
     }
     
     var disciplinesStore = [];
     var subsitesStore = [];
     
     const store = new DevExpress.data.CustomStore({
    key: 'id',
    load(loadOptions) {
      const deferred = $.Deferred();
      const args = {};
      [
        'skip',
        'take',
        'requireTotalCount',
        'requireGroupCount',
        'sort',
        'filter',
        'totalSummary',
        'group',
        'groupSummary',
      ].forEach((i) => {
        if (i in loadOptions && isNotEmpty(loadOptions[i])) {
          args[i] = JSON.stringify(loadOptions[i]);
          
          //get all disciplines
          $.ajax({
                  url: '/Discipline/GetAll/',
                  dataType: 'json',
                  async:false,
                  success(result) {
                    disciplinesStore = result.result;
                  },
                  error() {
                    deferred.reject('Data Loading Error');
                  },
                  timeout: 5000,
                });
          
           //get all subsites
            $.ajax({
                    url: '/subsite/GetAll/',
                    dataType: 'json',
                    async:false,
                    success(result) {
                      subsitesStore = result.result;
                    },
                    error() {
                      deferred.reject('Data Loading Error');
                    },
                    timeout: 5000,
                  });
          
        }
      });
      $.ajax({
        url: '/user/GetUserList/',
        dataType: 'json',
        data: args,
        success(result) {
            debugger;
          deferred.resolve(result.result, {
            totalCount: result.totalItems
          });
        },
        error() {
          deferred.reject('Data Loading Error');
        },
        timeout: 5000,
      });

      return deferred.promise();
    },
    remove: function (key) {
        
        var deferred = $.Deferred();
        $.ajax({
            url: "/user/Delete?key=" + encodeURIComponent(key),
            method: "DELETE"
        })
        .done(deferred.resolve)
        .fail(function(e){
            deferred.reject("Deletion failed");
        });
        return deferred.promise();
    }
  });

  $('#gridContainer').dxDataGrid({
      dataSource: store,
      rowAlternationEnabled: true,
      remoteOperations:  true ,
      wordWrapEnabled:true,
      allowColumnResizing: true,
       filterRow: { visible: true },
        editing: {
        allowUpdating: false,
        allowAdding: false,
        allowDeleting: false,
        },
        keyExpr: 'id',
        paging: {
        pageSize: 10,
      },
      pager: {
      visible: true,
      showPageSizeSelector: false,
      showInfo: true,
      showNavigationButtons: true,
      
      },
      columns: ['displayName','email',{
          dataField: 'UserDisciplines',
          caption : 'Disciplines',
          alignment: "center",
          type:'memo',
          wordWrapEnabled:true,
          cellTemplate: function(container,options) {
              
              let disciplinesJoin = (options.data.userDisciplines)
              .map(ud => disciplinesStore.find(d => d.id === ud.disciplineId)?.nameEn)
              .join(" , ");
              
            $('<div/>')
            .html(disciplinesJoin)
            .appendTo(container);
          }
          
      },{
              dataField: 'UserSubsites',
              caption : 'Subites',
              alignment: "center",
              type:'memo',
              wordWrapEnabled:true,
              cellTemplate: function(container,options) {
                  let userSubsites = options.data.userSubsites;
                  let subsitesJoin = userSubsites
                  .map(ud => subsitesStore.find(d => d.id === ud.subsiteId)?.siteNameEn)
                  .join(" , ");
                  
                $('<div/>')
                .html(subsitesJoin)
                .appendTo(container);
              }
                  
              }, 
   {  
                width: 300,  
                alignment: 'center',  
                cellTemplate: function (container, options) {  
                    $('<a/>').addClass('fa-solid fa-pen').css("padding-right", "5px")
                        
                        .on('dxclick', function () {  
                            debugger;
                            window.location.href = "/user/edit/"+options.row.data.id;
                        })  
                        .appendTo(container);  

                    $('<a/>').addClass('fa-solid fa-trash-can')   
                        .on('dxclick', function () {  
                               debugger;
                            options.component.deleteRow(options.row.rowIndex);
                        })  
                        .appendTo(container);  
                }  
    }],
        showBorders: true });
      });

</script> 